// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft/local_storage.proto

#ifndef PROTOBUF_raft_2flocal_5fstorage_2eproto__INCLUDED
#define PROTOBUF_raft_2flocal_5fstorage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "raft/raft.pb.h"
// @@protoc_insertion_point(includes)

namespace raft {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_raft_2flocal_5fstorage_2eproto();
void protobuf_AssignDesc_raft_2flocal_5fstorage_2eproto();
void protobuf_ShutdownFile_raft_2flocal_5fstorage_2eproto();

class ConfigurationMeta;
class LogMeta;
class StableMeta;
class SnapshotMeta;

// ===================================================================

class ConfigurationMeta : public ::google::protobuf::Message {
 public:
  ConfigurationMeta();
  virtual ~ConfigurationMeta();
  
  ConfigurationMeta(const ConfigurationMeta& from);
  
  inline ConfigurationMeta& operator=(const ConfigurationMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigurationMeta& default_instance();
  
  void Swap(ConfigurationMeta* other);
  
  // implements Message ----------------------------------------------
  
  ConfigurationMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigurationMeta& from);
  void MergeFrom(const ConfigurationMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string peers = 1;
  inline int peers_size() const;
  inline void clear_peers();
  static const int kPeersFieldNumber = 1;
  inline const ::std::string& peers(int index) const;
  inline ::std::string* mutable_peers(int index);
  inline void set_peers(int index, const ::std::string& value);
  inline void set_peers(int index, const char* value);
  inline void set_peers(int index, const char* value, size_t size);
  inline ::std::string* add_peers();
  inline void add_peers(const ::std::string& value);
  inline void add_peers(const char* value);
  inline void add_peers(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& peers() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peers();
  
  // @@protoc_insertion_point(class_scope:raft.ConfigurationMeta)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> peers_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_raft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static ConfigurationMeta* default_instance_;
};
// -------------------------------------------------------------------

class LogMeta : public ::google::protobuf::Message {
 public:
  LogMeta();
  virtual ~LogMeta();
  
  LogMeta(const LogMeta& from);
  
  inline LogMeta& operator=(const LogMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMeta& default_instance();
  
  void Swap(LogMeta* other);
  
  // implements Message ----------------------------------------------
  
  LogMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMeta& from);
  void MergeFrom(const LogMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 start_log_index = 1;
  inline bool has_start_log_index() const;
  inline void clear_start_log_index();
  static const int kStartLogIndexFieldNumber = 1;
  inline ::google::protobuf::int64 start_log_index() const;
  inline void set_start_log_index(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:raft.LogMeta)
 private:
  inline void set_has_start_log_index();
  inline void clear_has_start_log_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 start_log_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_raft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static LogMeta* default_instance_;
};
// -------------------------------------------------------------------

class StableMeta : public ::google::protobuf::Message {
 public:
  StableMeta();
  virtual ~StableMeta();
  
  StableMeta(const StableMeta& from);
  
  inline StableMeta& operator=(const StableMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StableMeta& default_instance();
  
  void Swap(StableMeta* other);
  
  // implements Message ----------------------------------------------
  
  StableMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StableMeta& from);
  void MergeFrom(const StableMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 term = 1;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 1;
  inline ::google::protobuf::int64 term() const;
  inline void set_term(::google::protobuf::int64 value);
  
  // required string votedfor = 2;
  inline bool has_votedfor() const;
  inline void clear_votedfor();
  static const int kVotedforFieldNumber = 2;
  inline const ::std::string& votedfor() const;
  inline void set_votedfor(const ::std::string& value);
  inline void set_votedfor(const char* value);
  inline void set_votedfor(const char* value, size_t size);
  inline ::std::string* mutable_votedfor();
  inline ::std::string* release_votedfor();
  
  // @@protoc_insertion_point(class_scope:raft.StableMeta)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_votedfor();
  inline void clear_has_votedfor();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 term_;
  ::std::string* votedfor_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_raft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static StableMeta* default_instance_;
};
// -------------------------------------------------------------------

class SnapshotMeta : public ::google::protobuf::Message {
 public:
  SnapshotMeta();
  virtual ~SnapshotMeta();
  
  SnapshotMeta(const SnapshotMeta& from);
  
  inline SnapshotMeta& operator=(const SnapshotMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotMeta& default_instance();
  
  void Swap(SnapshotMeta* other);
  
  // implements Message ----------------------------------------------
  
  SnapshotMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotMeta& from);
  void MergeFrom(const SnapshotMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 last_included_term = 1;
  inline bool has_last_included_term() const;
  inline void clear_last_included_term();
  static const int kLastIncludedTermFieldNumber = 1;
  inline ::google::protobuf::int64 last_included_term() const;
  inline void set_last_included_term(::google::protobuf::int64 value);
  
  // required int64 last_included_index = 2;
  inline bool has_last_included_index() const;
  inline void clear_last_included_index();
  static const int kLastIncludedIndexFieldNumber = 2;
  inline ::google::protobuf::int64 last_included_index() const;
  inline void set_last_included_index(::google::protobuf::int64 value);
  
  // repeated string peers = 3;
  inline int peers_size() const;
  inline void clear_peers();
  static const int kPeersFieldNumber = 3;
  inline const ::std::string& peers(int index) const;
  inline ::std::string* mutable_peers(int index);
  inline void set_peers(int index, const ::std::string& value);
  inline void set_peers(int index, const char* value);
  inline void set_peers(int index, const char* value, size_t size);
  inline ::std::string* add_peers();
  inline void add_peers(const ::std::string& value);
  inline void add_peers(const char* value);
  inline void add_peers(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& peers() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peers();
  
  // @@protoc_insertion_point(class_scope:raft.SnapshotMeta)
 private:
  inline void set_has_last_included_term();
  inline void clear_has_last_included_term();
  inline void set_has_last_included_index();
  inline void clear_has_last_included_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 last_included_term_;
  ::google::protobuf::int64 last_included_index_;
  ::google::protobuf::RepeatedPtrField< ::std::string> peers_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_raft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_raft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static SnapshotMeta* default_instance_;
};
// ===================================================================


// ===================================================================

// ConfigurationMeta

// repeated string peers = 1;
inline int ConfigurationMeta::peers_size() const {
  return peers_.size();
}
inline void ConfigurationMeta::clear_peers() {
  peers_.Clear();
}
inline const ::std::string& ConfigurationMeta::peers(int index) const {
  return peers_.Get(index);
}
inline ::std::string* ConfigurationMeta::mutable_peers(int index) {
  return peers_.Mutable(index);
}
inline void ConfigurationMeta::set_peers(int index, const ::std::string& value) {
  peers_.Mutable(index)->assign(value);
}
inline void ConfigurationMeta::set_peers(int index, const char* value) {
  peers_.Mutable(index)->assign(value);
}
inline void ConfigurationMeta::set_peers(int index, const char* value, size_t size) {
  peers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfigurationMeta::add_peers() {
  return peers_.Add();
}
inline void ConfigurationMeta::add_peers(const ::std::string& value) {
  peers_.Add()->assign(value);
}
inline void ConfigurationMeta::add_peers(const char* value) {
  peers_.Add()->assign(value);
}
inline void ConfigurationMeta::add_peers(const char* value, size_t size) {
  peers_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigurationMeta::peers() const {
  return peers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigurationMeta::mutable_peers() {
  return &peers_;
}

// -------------------------------------------------------------------

// LogMeta

// required int64 start_log_index = 1;
inline bool LogMeta::has_start_log_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMeta::set_has_start_log_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMeta::clear_has_start_log_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMeta::clear_start_log_index() {
  start_log_index_ = GOOGLE_LONGLONG(0);
  clear_has_start_log_index();
}
inline ::google::protobuf::int64 LogMeta::start_log_index() const {
  return start_log_index_;
}
inline void LogMeta::set_start_log_index(::google::protobuf::int64 value) {
  set_has_start_log_index();
  start_log_index_ = value;
}

// -------------------------------------------------------------------

// StableMeta

// required int64 term = 1;
inline bool StableMeta::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StableMeta::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StableMeta::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StableMeta::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 StableMeta::term() const {
  return term_;
}
inline void StableMeta::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
}

// required string votedfor = 2;
inline bool StableMeta::has_votedfor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StableMeta::set_has_votedfor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StableMeta::clear_has_votedfor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StableMeta::clear_votedfor() {
  if (votedfor_ != &::google::protobuf::internal::kEmptyString) {
    votedfor_->clear();
  }
  clear_has_votedfor();
}
inline const ::std::string& StableMeta::votedfor() const {
  return *votedfor_;
}
inline void StableMeta::set_votedfor(const ::std::string& value) {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  votedfor_->assign(value);
}
inline void StableMeta::set_votedfor(const char* value) {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  votedfor_->assign(value);
}
inline void StableMeta::set_votedfor(const char* value, size_t size) {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  votedfor_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StableMeta::mutable_votedfor() {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  return votedfor_;
}
inline ::std::string* StableMeta::release_votedfor() {
  clear_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = votedfor_;
    votedfor_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SnapshotMeta

// required int64 last_included_term = 1;
inline bool SnapshotMeta::has_last_included_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotMeta::set_has_last_included_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotMeta::clear_has_last_included_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotMeta::clear_last_included_term() {
  last_included_term_ = GOOGLE_LONGLONG(0);
  clear_has_last_included_term();
}
inline ::google::protobuf::int64 SnapshotMeta::last_included_term() const {
  return last_included_term_;
}
inline void SnapshotMeta::set_last_included_term(::google::protobuf::int64 value) {
  set_has_last_included_term();
  last_included_term_ = value;
}

// required int64 last_included_index = 2;
inline bool SnapshotMeta::has_last_included_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnapshotMeta::set_has_last_included_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnapshotMeta::clear_has_last_included_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnapshotMeta::clear_last_included_index() {
  last_included_index_ = GOOGLE_LONGLONG(0);
  clear_has_last_included_index();
}
inline ::google::protobuf::int64 SnapshotMeta::last_included_index() const {
  return last_included_index_;
}
inline void SnapshotMeta::set_last_included_index(::google::protobuf::int64 value) {
  set_has_last_included_index();
  last_included_index_ = value;
}

// repeated string peers = 3;
inline int SnapshotMeta::peers_size() const {
  return peers_.size();
}
inline void SnapshotMeta::clear_peers() {
  peers_.Clear();
}
inline const ::std::string& SnapshotMeta::peers(int index) const {
  return peers_.Get(index);
}
inline ::std::string* SnapshotMeta::mutable_peers(int index) {
  return peers_.Mutable(index);
}
inline void SnapshotMeta::set_peers(int index, const ::std::string& value) {
  peers_.Mutable(index)->assign(value);
}
inline void SnapshotMeta::set_peers(int index, const char* value) {
  peers_.Mutable(index)->assign(value);
}
inline void SnapshotMeta::set_peers(int index, const char* value, size_t size) {
  peers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SnapshotMeta::add_peers() {
  return peers_.Add();
}
inline void SnapshotMeta::add_peers(const ::std::string& value) {
  peers_.Add()->assign(value);
}
inline void SnapshotMeta::add_peers(const char* value) {
  peers_.Add()->assign(value);
}
inline void SnapshotMeta::add_peers(const char* value, size_t size) {
  peers_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SnapshotMeta::peers() const {
  return peers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SnapshotMeta::mutable_peers() {
  return &peers_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace raft

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raft_2flocal_5fstorage_2eproto__INCLUDED
