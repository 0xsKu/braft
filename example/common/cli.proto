syntax="proto2";
package example;
option cc_generic_services = true;

// operation request/response
message SetPeerRequest {
    repeated string old_peers = 1;
    repeated string new_peers = 2;
    optional bool force = 3;
};

message SetPeerResponse {
    required bool success = 1;
    optional string leader = 2;
};

message ShutdownRequest {
};

message ShutdownResponse {
    required bool success = 1;
};


message SnapshotRequest {
};

message SnapshotResponse {
    required bool success = 1;
};

message GetLeaderRequest {
};

message GetLeaderResponse {
    required bool success = 1;
    optional string leader_addr = 2;
};

// service
service CliService {
    rpc set_peer(SetPeerRequest) returns (SetPeerResponse);
    rpc shutdown(ShutdownRequest) returns (ShutdownResponse);
    rpc snapshot(SnapshotRequest) returns (SnapshotResponse);
    rpc leader(GetLeaderRequest) returns (GetLeaderResponse);
};
