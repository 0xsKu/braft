package example;
option cc_generic_services = true;

// operation request/response
message SetPeerRequest {
    repeated string old_peers = 1;
    repeated string new_peers = 2;
    optional bool force = 3;
};

message SetPeerResponse {
    required bool success = 1;
    optional string leader = 2;
};

message StatsRequest {
};

message StatsResponse {
    required string state = 1;
    required int64 term = 2;
    required int64 last_log_index = 3;
    required int64 last_log_term = 4;
    required int64 committed_index = 5;
    required int64 applied_index = 6;
    required int64 last_snapshot_index = 7;
    required int64 last_snapshot_term = 8;
    repeated string peers = 9;
};

message ShutdownRequest {
};

message ShutdownResponse {
    required bool success = 1;
};


message SnapshotRequest {
};

message SnapshotResponse {
    required bool success = 1;
};

// service
service CliService {
    rpc set_peer(SetPeerRequest) returns (SetPeerResponse);
    rpc stats(StatsRequest) returns (StatsResponse);
    rpc shutdown(ShutdownRequest) returns (ShutdownResponse);
    rpc snapshot(SnapshotRequest) returns (SnapshotResponse);
};
