#edit-mode: -*- python -*-
#coding:gbk

WORKROOT('../../../../')

CPPFLAGS('-D__const__=  -D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DNDEBUG -Wno-unused-parameter -Werror')
CFLAGS('-g -O2 -pipe -W -Wall -fPIC')

CPPFLAGS('-g -O2 -pipe -W -Wall -fPIC')
CPPFLAGS('-fPIC ')
#CXXFLAGS('-fsanitize=address  
CPPFLAGS('-fno-omit-frame-pointer')
CPPFLAGS('-D__const__= ')
CPPFLAGS('-DRAFT_ENABLE_ROCKSDB_STORAGE')

INCPATHS('../../src ../common')

ImportConfigsFrom('../..')

profiler_flags=CppFlags('-DBAIDU_RPC_ENABLE_CPU_PROFILER -DBAIDU_RPC_ENABLE_HEAP_PROFILER')
CONFIGS('third-64/tcmalloc@1.7.0.200',Libraries())
                                       # ^^^ Don't link tcmalloc to libexecutor.so
CONFIGS('public/raft-rocksdb@trunk@comake')

LDFLAGS('-lpthread -lrt -ldl -lz -lssl -lcrypto -lbz2')
#LDFLAGS('-lasan')

PROTOC(ENV.WorkRoot() + '/third-64/protobuf/bin/protoc')
LIBS('../../libraft.a')

common_sources = (GLOB('../common/*.proto ../common/*.cpp'))

Application('block_server',Sources(common_sources, 'ebs.proto block_server.cpp', ENV.CppFlags() + profiler_flags),
            ENV.Libraries() + Libraries(ENV.WorkRoot() + 'third-64/tcmalloc/lib/libtcmalloc_and_profiler.a'),
            )
Application('block_client',Sources(common_sources, 'ebs.proto block_client.cpp', ENV.CppFlags() + profiler_flags),
            ENV.Libraries() + Libraries(ENV.WorkRoot() + 'third-64/tcmalloc/lib/libtcmalloc_and_profiler.a'),
            )
SharedLibrary('executor', LinkDeps(True), Sources('ebs.proto evm_executor_api.cpp'))

